@page "/"
@using AssemblyLineApp.Data;
@using AssemblyLineApp.Services;

@inject IOperationService OperationService
@inject IDeviceService DeviceService

<PageTitle>Index</PageTitle>

<h3>AREA ONE ASSEMBLY</h3>

<h4 class="operation-heading">OPERATIONS</h4>
<div class="table-container">
    <div class="table-section">
<!-- operational table presentation layer -->

    <button @onclick="ShowAddOperationModal" class="btn btn-primary mb-3">Add Operation</button>
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Operation Name</th>
            <th>Device Name</th>
            <th>Device Type</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var operation in operations)
        {
            <tr>
                <td>@operation.Name</td>
                <td>@operation.Device.Name</td>
                <td>@operation.Device.DeviceType</td>
                <td>
                    
                    <button @onclick="@(() => EditOperation(operation))" class="btn btn-secondary btn-sm">Edit</button>
                    <button @onclick="@(() => RemoveOperation(operation.OperationId))" class="btn btn-danger btn-sm ms-2">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>
    </div>


    <div class="table-section">
<!-- Devices table presentation layer -->
<h4>Devices</h4>
<button @onclick="ShowAddDeviceModal" class="btn btn-primary mb-3">Add Device</button>
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Device Name</th>
         
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var device in devices)
        {
            <tr>
                <td>@device.Name</td>
               
                <td>
                    <button @onclick="@(() => EditDevice(device))" class="btn btn-secondary btn-sm">Edit</button>
                    <button @onclick="@(() => RemoveDevice(device.DeviceId))" class="btn btn-danger btn-sm ms-2">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>
</div>

<OperationModal @ref="operationModalRef" @bind-Visible="isOperationModalVisible" OnOperationAdded="RefreshOperations" />
<DeviceModal @ref="deviceModalRef" @bind-Visible="isDeviceModalVisible" OnDeviceAdded="RefreshDevices" />

@code {
    private bool isOperationModalVisible = false;
    private List<Operation> operations;
    private OperationModal operationModalRef;
    private DeviceModal deviceModalRef;
    private List<Devices> devices = new();
    private bool isDeviceModalVisible = false;

    protected override void OnInitialized()
    {
        operations = OperationService.GetAllOperations().ToList();
          devices = DeviceService?.GetDevices()?.ToList() ?? new List<Devices>();
    }
    

    private void ShowAddOperationModal()
    {
        operationModalRef.ClearFields();
        isOperationModalVisible = true;
    }

    private void RefreshOperations()
    {
        operations = OperationService.GetAllOperations().ToList();
    }

    private void RefreshDevices()
    {
        devices = DeviceService.GetDevices().ToList();
    }



    private void RemoveOperation(int operationId)
    {
        OperationService.DeleteOperation(operationId);
        RefreshOperations();
    }

    private void EditOperation(Operation operation)
    {
        operationModalRef.LoadOperationForEditing(operation);
        isOperationModalVisible = true;
    }



    private void ShowAddDeviceModal()
    {
        deviceModalRef.ClearFields();
        isDeviceModalVisible = true;
    }


    private void EditDevice(Devices device)
    {
        deviceModalRef.LoadDeviceForEditing(device);
        isDeviceModalVisible = true;
    }


    private void RemoveDevice(int deviceId)
    {
        DeviceService.RemoveDevice(deviceId);
        RefreshDevices();
    }
}
